<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.kingsword.course.dao.CalendarMapper">
  <resultMap id="BaseResultMap" type="xyz.kingsword.course.pojo.Calendar">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="tea_id" jdbcType="CHAR" property="teaId"/>
    <result column="course_id" jdbcType="CHAR" property="courseId"/>
    <result column="sort_id" jdbcType="INTEGER" property="sortId"/>
    <result column="week_of_theory" jdbcType="INTEGER" property="weekOfTheory"/>
    <result column="time_of_homework" jdbcType="INTEGER" property="timeOfHomework"/>
    <result column="time_of_all" jdbcType="INTEGER" property="timeOfAll"/>
    <result column="property" jdbcType="CHAR" property="property"/>
    <result column="paper_proportion" jdbcType="INTEGER" property="paperProportion"/>
    <result column="attendance_proportion" jdbcType="DOUBLE" property="attendanceProportion"/>
    <result column="performance_proportion" jdbcType="DOUBLE" property="performanceProportion"/>
    <result column="other_proportion" jdbcType="DOUBLE" property="otherProportion"/>
    <result column="coach" jdbcType="VARCHAR" property="coach"/>
    <result column="teaching_content" jdbcType="CHAR" property="teachingContent"/>
    <result column="status" jdbcType="INTEGER" property="status"/>
    <result column="examination_way" jdbcType="INTEGER" property="examinationWay"/>
    <result column="semester_id" jdbcType="CHAR" property="semesterId"/>
    <result column="time_rule" jdbcType="CHAR" property="timeRule"/>
    <result column="tea_name" jdbcType="CHAR" property="teaName"/>
  </resultMap>

  <resultMap id="CalendarData" type="xyz.kingsword.course.dao.DO.CalendarDataDO">
    <result column="id" property="id" jdbcType="INTEGER"/>
    <result column="tea_name" property="teaName" jdbcType="CHAR"/>
    <result column="title" property="title" jdbcType="CHAR"/>
    <result column="tea_id" property="teaId" jdbcType="CHAR"/>
    <result column="college" property="college" jdbcType="CHAR"/>
    <result column="research_room" property="researchRoom" jdbcType="CHAR"/>
    <result column="course_id" property="courseId" jdbcType="CHAR"/>
    <result column="name" property="courseName" jdbcType="CHAR"/>
    <result column="class_name" property="className" jdbcType="CHAR"/>
    <result column="sort_id" property="sortId" jdbcType="INTEGER"/>
    <result column="week_of_theory" property="weekOfTheory" jdbcType="INTEGER"/>
    <result column="time_theory" property="timeOfTheory" jdbcType="INTEGER"/>
    <result column="time_computer" property="timeOfComputer" jdbcType="INTEGER"/>
    <result column="time_of_homework" property="timeOfHomework" jdbcType="INTEGER"/>
    <result column="time_of_all" property="timeOfAll" jdbcType="INTEGER"/>
    <result column="credit" property="credit" jdbcType="INTEGER"/>
    <result column="student_num" property="studentNum" jdbcType="INTEGER"/>
    <result column="test_type" property="testType" jdbcType="CHAR"/>
    <result column="teaching_content" property="teachingContent" jdbcType="CHAR"/>
    <result column="course_property" property="courseProperty" jdbcType="INTEGER"/>
    <result column="examination_form" property="examinationForm" jdbcType="CHAR"/>
    <result column="exam_proportion" property="examProportion" jdbcType="INTEGER"/>
    <result column="homework_proportion" property="homeworkProportion" jdbcType="INTEGER"/>
    <result column="lab_proportion" property="labProportion" jdbcType="INTEGER"/>
    <result column="test_proportion" property="testProportion" jdbcType="INTEGER"/>
    <result column="paper_proportion" property="paperProportion" jdbcType="INTEGER"/>
    <result column="attendance_proportion" property="attendanceProportion" jdbcType="INTEGER"/>
    <result column="performance_proportion" property="performanceProportion" jdbcType="INTEGER"/>
    <result column="coach" property="coach" jdbcType="CHAR"/>
    <result column="coach_teacher" property="coachTeacher" jdbcType="CHAR"/>
    <result column="text_book" property="textBook" jdbcType="CHAR"/>
    <result column="reference_book" property="referenceBook" jdbcType="CHAR"/>
    <result column="semester_id" property="semesterId" jdbcType="CHAR"/>
  </resultMap>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                           separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                           separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from calendar
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="xyz.kingsword.course.pojo.Calendar" useGeneratedKeys="true" keyProperty="id">
    insert into calendar (tea_id, course_id,
                          sort_id, semester_id, teaching_content)
    values (#{teaId,jdbcType=CHAR}, #{courseId,jdbcType=CHAR},
            #{sortId,jdbcType=INTEGER}, #{semesterId,jdbcType=CHAR}, #{teachingContent,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="xyz.kingsword.course.pojo.Calendar">
    insert into calendar
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="teaId != null">
        tea_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="sortId != null">
        sort_id,
      </if>
      <if test="weekOfTheory != null">
        week_of_theory,
      </if>
      <if test="timeOfHomework != null">
        time_of_homework,
      </if>
      <if test="timeOfAll != null">
        time_of_all,
      </if>
      <if test="property != null">
        property,
      </if>
      <if test="paperProportion != null">
        paper_proportion,
      </if>
      <if test="attendanceProportion != null">
        attendance_proportion,
      </if>
      <if test="performanceProportion != null">
        performance_proportion,
      </if>
      <if test="otherProportion != null">
        other_proportion,
      </if>
      <if test="coach != null">
        coach,
      </if>
      <if test="teachingContent != null">
        teaching_content,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="examinationWay != null">
        examination_way,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teaId != null">
        #{teaId,jdbcType=CHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=CHAR},
      </if>
      <if test="sortId != null">
        #{sortId,jdbcType=INTEGER},
      </if>
      <if test="weekOfTheory != null">
        #{weekOfTheory,jdbcType=INTEGER},
      </if>
      <if test="timeOfHomework != null">
        #{timeOfHomework,jdbcType=INTEGER},
      </if>
      <if test="timeOfAll != null">
        #{timeOfAll,jdbcType=INTEGER},
      </if>
      <if test="property != null">
        #{property,jdbcType=CHAR},
      </if>
      <if test="paperProportion != null">
        #{paperProportion,jdbcType=INTEGER},
      </if>
      <if test="attendanceProportion != null">
        #{attendanceProportion,jdbcType=DOUBLE},
      </if>
      <if test="performanceProportion != null">
        #{performanceProportion,jdbcType=DOUBLE},
      </if>
      <if test="otherProportion != null">
        #{otherProportion,jdbcType=DOUBLE},
      </if>
      <if test="coach != null">
        #{coach,jdbcType=VARCHAR},
      </if>
      <if test="teachingContent != null">
        #{teachingContent,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="examinationWay != null">
        #{examinationWay,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="xyz.kingsword.course.pojo.Calendar">
    update calendar
    <set>
      <if test="teaId != null">
        tea_id = #{teaId,jdbcType=CHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=CHAR},
      </if>
      <if test="sortId != null">
        sort_id = #{sortId,jdbcType=INTEGER},
      </if>
      <if test="weekOfTheory != null">
        week_of_theory = #{weekOfTheory,jdbcType=INTEGER},
      </if>
      <if test="timeOfHomework != null">
        time_of_homework = #{timeOfHomework,jdbcType=INTEGER},
      </if>
      <if test="timeOfAll != null">
        time_of_all = #{timeOfAll,jdbcType=INTEGER},
      </if>
      <if test="property != null">
        property = #{property,jdbcType=CHAR},
      </if>
      <if test="paperProportion != null">
        paper_proportion = #{paperProportion,jdbcType=INTEGER},
      </if>
      <if test="attendanceProportion != null">
        attendance_proportion = #{attendanceProportion,jdbcType=DOUBLE},
      </if>
      <if test="performanceProportion != null">
        performance_proportion = #{performanceProportion,jdbcType=DOUBLE},
      </if>
      <if test="otherProportion != null">
        other_proportion = #{otherProportion,jdbcType=DOUBLE},
      </if>
      <if test="coach != null">
        coach = #{coach,jdbcType=VARCHAR},
      </if>
      <if test="teachingContent != null">
        teaching_content = #{teachingContent,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="examinationWay != null">
        examination_way = #{examinationWay,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.kingsword.course.pojo.Calendar">
    update calendar
    set tea_id           = #{teaId,jdbcType=CHAR},
        course_id        = #{courseId,jdbcType=CHAR},
        sort_id          = #{sortId,jdbcType=INTEGER},
        teaching_content = #{teachingContent,jdbcType=CHAR},
        `status`         = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="insertContent">
    update calendar
    set teaching_content=#{teachingContent}
    where id = #{id};
  </update>
  <update id="setStatus">
    update calendar set `status`=#{status} where id in
    <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
      #{item}
    </foreach>
  </update>


  <!--导出教学日历-->
  <select id="exportCalendar" resultMap="CalendarData">
    select *
    from calendar_view
    where id = #{calendarId}
  </select>

  <!--  <insert id="insertBasicParam">-->
  <!--    #         insert into calendar(tea_id,sort_id,semester_id,week_of_theory,time_of_homework,time_of_all,property,paper_proportion,attendance_proportion)-->
  <!--  </insert>-->

  <select id="getCalendarByCourse" resultMap="BaseResultMap">
    select id, semester_id
    from calendar
    where semester_id = #{semester}
  </select>

  <select id="getCalendarByTeacher" resultMap="BaseResultMap">
    select id, course_id
    from calendar
    where semester_id = #{semesterId}
      and tea_id = #{teacherId}
  </select>
  <!--  <select id="getIdBySort" resultMap="BaseResultMap">-->
  <!--    select id,sort_id from calendar where sort_id-->
  <!--    in-->
  <!--    <foreach collection="list" item="item" separator="," open="(" close=")">-->
  <!--      #{item,jdbcType=INTEGER}-->
  <!--    </foreach>-->
  <!--  </select>-->

  <select id="getCourseGroupByResearch" resultMap="xyz.kingsword.course.dao.TeacherMapper.TeacherGroupMap">
    SELECT course_group_view.cou_id, course_group_view.semester_id, course_group_view.course_name
    FROM course_group_view
           INNER JOIN teacher ON course_group_view.tea_id = teacher.id
    WHERE teacher.reasearch_id = #{researchRoomId}
      and semester_id = #{semesterId}
    GROUP BY cou_id
    order by course_group_view.cou_id
  </select>
  <select id="getVerifyStatus" resultMap="BaseResultMap">
    select calendar.id, tea_id, teacher.name as tea_name, semester_id, `status`
    from calendar
           join teacher on calendar.tea_id = teacher.id
    where calendar.course_id = #{courseId}
      and calendar.semester_id = #{semesterId}
    order by `status`, calendar.id desc
  </select>
</mapper>