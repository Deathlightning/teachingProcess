<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.kingsword.course.dao.BookMapper">
  <resultMap id="BaseResultMap" type="xyz.kingsword.course.pojo.Book">
    <result column="id" jdbcType="INTEGER" property="id"/>
    <result column="isbn" jdbcType="CHAR" property="isbn"/>
    <result column="name" jdbcType="CHAR" property="name"/>
    <result column="author" jdbcType="CHAR" property="author"/>
    <result column="publish" jdbcType="CHAR" property="publish"/>
    <result column="price" jdbcType="DOUBLE" property="price"/>
    <result column="note" jdbcType="VARCHAR" property="note"/>
    <result column="status" jdbcType="INTEGER" property="status"/>
    <result column="pub_date" jdbcType="CHAR" property="pubDate"/>
    <result column="award" jdbcType="CHAR" property="award"/>
    <result column="edition" jdbcType="CHAR" property="edition"/>
    <result column="for_teacher" jdbcType="INTEGER" property="forTeacher"/>
    <result column="img_url" jdbcType="CHAR" property="imgUrl"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, isbn, name, author, publish, price, note, tea_id, `status`, pub_date, award, edition,
    for_teacher
  </sql>
  <insert id="insert" parameterType="xyz.kingsword.course.pojo.Book" useGeneratedKeys="true" keyProperty="id">
    insert into book (isbn, `name`, author,
                      publish, price, note,
                      pub_date, award, edition,
                      for_teacher, img_url)
    values (#{isbn,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{author,jdbcType=CHAR},
            #{publish,jdbcType=CHAR}, #{price,jdbcType=CHAR}, #{note,jdbcType=VARCHAR},
            #{pubDate,jdbcType=CHAR}, #{award,jdbcType=CHAR}, #{edition,jdbcType=CHAR},
            #{forTeacher,jdbcType=INTEGER},
            #{imgUrl,jdbcType=CHAR})
  </insert>
  <update id="update">
    update book
    <set>
      `name` = #{name,jdbcType=CHAR},
      author = #{author,jdbcType=CHAR},
      publish = #{publish,jdbcType=CHAR},
      price = #{price,jdbcType=CHAR},
      note = #{note,jdbcType=VARCHAR},
      pub_date = #{pubDate,jdbcType=CHAR},
      award = #{award,jdbcType=CHAR},
      edition = #{edition,jdbcType=CHAR},
      for_teacher = #{forTeacher,jdbcType=INTEGER}
    </set>
    where id = #{id}
  </update>


  <update id="updateForTeacher">
    update book
    set for_teacher=#{num}
    where id = #{id}
  </update>
  <update id="delete">
    update book set `status`=-1 where id in (
    <foreach collection="list" item="item">
      #{item}
    </foreach>
    )
  </update>
  <update id="forTeacherIncrease">
    update book set for_teacher = for_teacher+1 where id in (
    <foreach collection="list" item="item">
      #{item}
    </foreach>
    )
  </update>
  <delete id="cancelTeacherPurchase">
    update book
    set for_teacher = for_teacher - 1
    where id = (select book_order.book_id
                from book_order
                where id = #{id})
      and for_teacher &gt; 0
  </delete>

  <select id="selectBookList" resultMap="BaseResultMap">
    select * from book where id in (
    <foreach collection="collection" item="item" index="index" separator=",">
      #{item}
    </foreach>
    )
  </select>
  <select id="selectBookByPrimaryKey" resultMap="BaseResultMap">
    select *
    from book
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select *
    from book
    where `status` = 0;
  </select>

</mapper>